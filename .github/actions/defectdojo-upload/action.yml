name: Uploads security tool output to DefectDojo
description: Automatically uploads results of a security scan to DefectDojo. Engagement ID and selection of import or reimport scan is automatic.
inputs:
  file:
    required: true
  scan_type:
    required: true
  master_engagement_id:
    required: true
  development_engagement_id:
    required: true
  defectdojo_api_key:
    required: true
  defectdojo_host:
    required: true
  

runs:
  using: 'composite'
  steps:
    - name: Upload results to DefectDojo
      shell: bash
      run: |
        set -e
        if [ "${GITHUB_REF_NAME}" = "master" ]; then
          ENGAGEMENT_ID=${{ inputs.master_engagement_id }}
        else
          ENGAGEMENT_ID=${{ inputs.development_engagement_id }}
        fi

        FILE="${{ inputs.file }}"
        SCAN_TYPE="${{ inputs.scan_type }}"

        SCAN_EXISTS=$(curl -s -H "Authorization: Token ${{ inputs.defectdojo_api_key }}" \
          "${{ inputs.defectdojo_host }}/api/v2/tests/?engagement=$ENGAGEMENT_ID&test_type=$SCAN_TYPE" \
          | jq '.count')

        if [ "$SCAN_EXISTS" -gt 0 ]; then
          echo "$SCAN_TYPE found, Reimporting scan..."
          curl -sS -X POST "${{ inputs.defectdojo_host }}/api/v2/reimport-scan/" \
            -H "Authorization: Token ${{ inputs.defectdojo_api_key }}" \
            -F "engagement=$ENGAGEMENT_ID" \
            -F "scan_type=$SCAN_TYPE" \
            -F "file=@$FILE" \
            -F "active=true" \
            -F "verified=true" \
            -F "minimum_severity=Low"
        else
          echo "$SCAN_TYPE not found, Importing scan..."
          curl -sS -X POST "${{ inputs.defectdojo_host }}/api/v2/import-scan/" \
            -H "Authorization: Token ${{ inputs.defectdojo_api_key }}" \
            -F "engagement=$ENGAGEMENT_ID" \
            -F "scan_type=$SCAN_TYPE" \
            -F "file=@$FILE" \
            -F "active=true" \
            -F "verified=true" \
            -F "minimum_severity=Low"
        fi

name: CI + DevSecOps + Deploy ASP.NET Core to Azure

on:
  push:
    branches: [ main, master ]     # run on both
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: rawsolutions   # <-- your App Service name
  # Optional: set these in repo Settings → Secrets and variables → Actions
  # SONAR_HOST_URL: https://sonarcloud.io
  # SONAR_PROJECT_KEY: your_project_key

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore   # no -o here

      - name: Publish
        run: dotnet publish -c Release -o publish                 # publish output

      - name: Upload Published Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: published-app
          path: publish/

  security-scans:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download Published Artifacts
        uses: actions/download-artifact@v4
        with:
          name: published-app
          path: publish/

      # ---------- Trivy (FS/SCA) ----------
      - name: Install Trivy
        run: |
          sudo apt-get update
          sudo apt-get install -y wget
          wget -q https://github.com/aquasecurity/trivy/releases/latest/download/trivy_0.50.2_Linux-64bit.deb
          sudo dpkg -i trivy_0.50.2_Linux-64bit.deb

      - name: SCA / FS scan with Trivy (non-failing)
        run: trivy fs --no-progress --exit-code 0 publish

      # ---------- SonarQube (optional) ----------
      - name: SonarQube Scanner (optional)
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          if [ -n "$SONAR_TOKEN" ] && [ -n "${{ env.SONAR_HOST_URL }}" ] && [ -n "${{ env.SONAR_PROJECT_KEY }}" ]; then
            echo "Running SonarQube analysis..."
            sonar-scanner \
              -Dsonar.host.url=${{ env.SONAR_HOST_URL }} \
              -Dsonar.login=${SONAR_TOKEN} \
              -Dsonar.projectKey=${{ env.SONAR_PROJECT_KEY }} \
              -Dsonar.sources=.
          else
            echo "Skipping SonarQube: missing token or config."
          fi

      # ---------- OWASP ZAP (baseline, non-failing by default) ----------
      - name: Install OWASP ZAP
        run: sudo apt-get update && sudo apt-get install -y zaproxy

      - name: ZAP Baseline (optional)
        env:
          TARGET_URL: https://rawsolutions-ee...azurewebsites.net
        run: |
          if [ -n "$TARGET_URL" ]; then
            /usr/share/zaproxy/zap-baseline.py -t "$TARGET_URL" -r zap-report.html || true
          else
            echo "No TARGET_URL set; skipping ZAP baseline."
          fi

      - name: Upload Security Reports
        uses: actions/upload-artifact@v4
        with:
          name: security-reports
          path: |
            zap-report.html
            trivy*.txt
          if-no-files-found: ignore

  deploy:
    runs-on: ubuntu-latest
    needs: security-scans
    steps:
      - name: Download Published Artifacts
        uses: actions/download-artifact@v4
        with:
          name: published-app
          path: publish/

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZUREAPPPUBLISHPROFILE }}
          package: ./publish

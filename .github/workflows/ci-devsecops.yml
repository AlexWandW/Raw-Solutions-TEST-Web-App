name: CI DevSecOps Pipeline

on:
  push:
    branches:
      - "master"
  pull_request:
    branches:
      - "master"

jobs:
  build:
    name: Build Application
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build project
        run: dotnet build --no-restore

      - name: Run tests
        run: dotnet test --no-build --verbosity normal

      - name: Build docker image
        working-directory: Raw-Solutions-TEST-Web-App
        run: docker build -t myapp:latest .

      - name: Save docker image
        run: docker save myapp:latest -o myapp.tar

      - name: Upload docker image as artifact
        uses: actions/upload-artifact@v4
        with:
          name: myapp-image
          path: myapp.tar

  image-scan:
    name: Image Scan w/ Trivy
    runs-on: ubuntu-latest
    needs:
      - build
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
  
      - name: Download docker image for Image Scan
        uses: actions/download-artifact@v5
        with:
          name: myapp-image
          path: ./myapp-image
          
      - name: Load docker image for Image Scan
        run: docker load -i myapp-image/myapp.tar

      - name: Run Trivy Image Scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: myapp:latest
          format: 'sarif'
          output: 'trivy-image-scan-results.sarif'
          severity: 'CRITICAL,HIGH'
          ignore-unfixed: true

      # - name: Upload Trivy Image Scan output as artifact
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: trivy-image-scan-results
      #     path: trivy-image-scan-results.sarif

  sast:
    name: SAST w/ SonarQube      
    runs-on: windows-latest
    needs: 
      - build
      - image-scan
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available.
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Cache SonarQube Cloud packages
        uses: actions/cache@v4
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarQube Cloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v4
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarQube Cloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |

          .\.sonar\scanner\dotnet-sonarscanner begin /k:"AlexWandW_Raw-Solutions-TEST-Web-App" /o:"alexwandw" /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
          dotnet build
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

  sca:
    name: SCA w/ Trivy
    runs-on: ubuntu-latest
    needs: 
      - build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run Trivy SCA
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          ignore-unfixed: true
          format: 'sarif'
          output: 'SCA-trivy-results.sarif'
          severity: 'CRITICAL,HIGH'

      # - name: Upload Trivy SAST output as artifact
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: SCA-trivy-results
      #     path: SCA-trivy-results.sarif

  dast:
    name: DAST w/ OWASP Zap
    runs-on: ubuntu-latest
    needs:
      - build
      - sast
      - sca
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download docker image for DAST
        uses: actions/download-artifact@v5
        with:
          name: myapp-image
          path: ./myapp-image

      - name: Load docker image for DAST
        run: docker load -i myapp-image/myapp.tar

      - name: Start application docker container from loaded image
        run: docker run -d -p 8080:8080 --name myapp myapp:latest

      - name: Wait for application to be ready
        run: |
          until curl -sf http://localhost:8080; do
            echo "Waiting for application be ready..."
            sleep 3
          done

      - name: Run baseline OWASP ZAP scan
        uses: zaproxy/action-baseline@v0.14.0
        with: 
          target: 'http://localhost:8080'
          cmd_options: '-a'
          allow_issue_writing: false
          
        
    
